{"version":3,"sources":["inc/main.js","inc/login.js","inc/signup.js","inc/Mapdata.js","inc/kakaomap.js","inc/list.js","inc/search.js","inc/view.js","inc/image.js","inc/write.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","_withProps","Component","matchProps","_openModal","this","_toggleModal","_closeModal","setState","visible","_logout","window","confirm","state","id","password","admin","user_ip","login","login_modal","className","href","to","onClick","_login","Login","_changeID","id_v","document","getElementsByName","value","_changePW","pw_v","_selectUserData","e","a","trim","alert","obj","axios","method","data","headers","Headers","res","suc","width","height","effect","onClickAway","type","name","onChange","autoComplete","style","Signup","_signup","pw_check","email","test","length","email_check","match","location","placeholder","Mapdata","title","lat","lng","KakaoMap","script","createElement","async","src","head","appendChild","onload","kakao","maps","load","container","getElementById","options","center","LatLng","level","map","Map","forEach","el","Marker","position","markerPosition","setMap","List","_getListData","limit","page","_setPage","search","queryString","parse","total_cnt","data_list","page_arr","i","Math","ceil","cnt","push","all_page","_changePage","sessionStorage","setItem","Number","_countHead","curHead","sit","exp","icon","faSmile","faMeh","faFrown","faAngry","color","file","fileName","list","key","view_url","storeid","storeName","address","time","Search","maxLength","faSearch","View","_getAddress","getAddress","console","log","_getData","getData","_addViewCnt","_removeView","params","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","InfoWindow","content","open","setCenter","modify_url","defaultValue","readOnly","faEye","view_cnt","faMapMarker","faPhoneAlt","number","faClock","faChair","faEdit","introduce","Image","encType","action","Write","_submitStore","image","replace","url","_getModifyData","App","JSON","stringify","ip","IP","user_id","reload","removeItem","_getstoreName","boolean","login_model","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.be90e808.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../App.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Login } from './index';\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            id : \"\",\r\n            password : \"\",\r\n        }\r\n    }\r\n    _withProps = function (Component, props) {\r\n        return function(matchProps) {\r\n          return <Component {...props} {...matchProps} />\r\n        }\r\n      }\r\n    _openModal = function() {\r\n        return this.props._toggleModal(true);\r\n      }\r\n    \r\n      _closeModal = function() {\r\n        this.setState({\r\n            visible : false\r\n        });\r\n      }\r\n    \r\n    _logout = function() {\r\n        if(window.confirm('로그아웃 하시겠습니까?')) {\r\n          this.props._logout();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { admin, user_ip, login, login_modal, _toggleModal } = this.props;\r\n        \r\n        return (\r\n            <div >\r\n                <nav className=\"header\">\r\n                    <div className=\"header_area\">\r\n                        <div className=\"header_left\">\r\n                            <a href=\"/\">Logo</a>\r\n                        </div>\r\n                        <ul className=\"header_center\">\r\n                            {/* <li><Link to=\"/\">소개</Link></li>\r\n                            <li><Link to=\"/\">맛집리스트</Link></li>\r\n                            <li><Link to=\"/\">FAQ</Link></li>\r\n                            <li><Link to=\"/\">공지사항</Link></li>\r\n                            <li><Link to=\"/\">마이페이지</Link></li> */}\r\n                        </ul>\r\n                        <ul className=\"header_right\">\r\n                            {login && admin ==='Y' && user_ip ===\"192.168.55.244\"\r\n                            ?   <div><li><Link to=\"/write\">글쓰기</Link></li>\r\n                                {/* <li><Link to=\"/image\">이미지</Link></li> */}\r\n                                </div>\r\n                             : null\r\n                            }\r\n\r\n                            {login ? <li><div onClick={() => this._logout()}>로그아웃</div></li>\r\n                            : <li><div onClick={() => this._openModal()}>로그인</div></li>}\r\n                            <Login\r\n                                _login = {this.props._login}\r\n                                login_modal = {login_modal}\r\n                                _toggleModal = {_toggleModal} />\r\n                            \r\n                            {!login \r\n                            ? <li><Link to=\"/signup\">회원가입</Link></li> \r\n                            : null }\r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main;\r\n","import { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Modal from 'react-awesome-modal';\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : \"\",\r\n            password : \"\",\r\n            login : false,\r\n        }\r\n    }\r\n\r\n    _changeID = function() {\r\n        const id_v = document.getElementsByName('id')[0].value;\r\n        this.setState({\r\n            id : id_v\r\n        });\r\n    }\r\n\r\n    _changePW = function() {\r\n        const pw_v = document.getElementsByName('password')[0].value;\r\n    \r\n        this.setState({\r\n            password : pw_v\r\n        });\r\n    }\r\n\r\n    _selectUserData = async (e) => {\r\n        const id = this.state.id.trim();\r\n        const password = this.state.password.trim();\r\n\r\n        if(id === \"\") {\r\n        return alert('아이디를 입력해주세요.');\r\n\r\n        } else if(password === \"\") {\r\n        return alert('비밀번호를 입력해주세요.');\r\n        }\r\n\r\n        const obj = { id : id, password : password }\r\n        const res = await axios('/api/login', {\r\n            method : 'POST',\r\n            data : obj,\r\n            headers: new Headers()\r\n        })\r\n\r\n        if(res.data) {\r\n    \r\n            if(res.data.suc) {\r\n                this.props._login(res.data);\r\n                this.props._toggleModal(false);\r\n                return alert('로그인 되었습니다.');\r\n            }else{\r\n                return alert('아이디 및 비밀번호가 일치하지 않습니다.');\r\n            }\r\n        } \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='login-div'>\r\n                {/* <div>로그인</div>\r\n                <form>\r\n                    <div className='login_div'>\r\n                        <div className='login_input_div'>\r\n                            <p> 아이디 </p>\r\n                            <input type='text' name='id' onChange={() => this._changeID()} autoComplete=\"off\"/>\r\n                        </div>\r\n\r\n                        <div className='login_input_div' style={{ 'marginTop' : '40px'}}>\r\n                            <p> 비밀번호 </p>\r\n                            <input type='password' name='password' onChange={() => this._changePW()}/>\r\n                        </div>\r\n\r\n                        <div className='submit_div'>\r\n                        <div> <input type='button' value='로그인' onClick={() => this._selectUserData()}/> </div>\r\n                        </div>\r\n                        </div>\r\n                </form> */}\r\n                <Modal \r\n                    visible={this.props.login_modal} \r\n                    width=\"400\" height=\"360\"\r\n                    effect=\"fadeInDown\" \r\n                    onClickAway={() => this.props._toggleModal(false)}>\r\n                    <div>\r\n                        <h4 className='acenter login_tit'> 로그인 </h4>\r\n                        <form>\r\n                        <div className='login_div'>\r\n                        <div className='login_input_div'>\r\n                            <p> 아이디 </p>\r\n                            <input type='text' name='id' onChange={() => this._changeID()} autoComplete=\"off\"/>\r\n                        </div>\r\n\r\n                        <div className='login_input_div' style={{ 'marginTop' : '40px'}}>\r\n                            <p> 비밀번호 </p>\r\n                            <input type='password' name='password' onChange={() => this._changePW()}/>\r\n                        </div>\r\n\r\n                        <div className='submit_div'>\r\n                            <div> <input type='button' value='로그인' onClick={() => this._selectUserData()}/> </div>\r\n                            <div> <input type='button' value='취소' onClick={() => this.props._toggleModal(false)}/> </div>\r\n                        </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './css/signup.css';\r\n\r\nclass Signup extends Component{\r\n    \r\n  _signup = async function() {\r\n\r\n      const id = document.getElementsByName('signup_id')[0].value.trim();\r\n      const password = document.getElementsByName('signup_password')[0].value.trim();\r\n      const pw_check = document.getElementsByName('signup_pswCheck')[0].value.trim();\r\n      const name = document.getElementsByName('signup_name')[0].value.trim();\r\n      const email = document.getElementsByName('signup_email')[0].value.trim();\r\n\r\n      const eng_check = /^[a-z]+[a-z0-9]{5,19}$/g;\r\n      if(!eng_check.test(id)) {\r\n        return alert('아이디는 영문자로 시작하는 6~20자여야만 합니다.')\r\n      }\r\n      \r\n      const pwcheck = /^[a-z]+[a-z0-9]{5,19}$/g;\r\n      if(!pwcheck.test(password)) {\r\n          return alert('비밀번호는 영문자로 시작하는 6~20자여야만 합니다.')\r\n\r\n      } else if(password !== pw_check) {\r\n          return alert('비밀번호와 비밀번호 확인이 일치하지 않습니다.')\r\n      }\r\n\r\n      if(name.length === 0 || name.length < 2) {\r\n          return alert('이름은 최소 2글자 이상 입력해야 합니다.');\r\n    \r\n      }\r\n\r\n      const email_check = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n      if(!email.match(email_check)) {\r\n          return alert('올바른 이메일 형식을 입력해주세요.');\r\n      }\r\n\r\n      const data = { \r\n          id : id, \r\n          password : password, \r\n          name : name, \r\n          email : email };\r\n\r\n      const add_user = await axios('/add/user', {\r\n          method : 'POST',\r\n          headers: new Headers(),\r\n          data : data\r\n      })\r\n\r\n      if(!add_user) {\r\n          return alert('이미 존재하는 아이디입니다.');\r\n    \r\n      } else {\r\n        alert('회원가입이 완료되었습니다.');\r\n        return window.location.href = '/';\r\n      }\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"sign-box\">\r\n              <h4> JOIN </h4>\r\n              <form className=\"sign-form\">\r\n                <div className=\"sign-info\">\r\n                  <div className=\"sign-label\">\r\n                    <label>아이디</label>\r\n                  </div>\r\n                  <div className=\"sign-input\">\r\n                    <input type='text' name=\"signup_id\"  placeholder=\"6~20자 영문자를 사용하세요\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sign-info\">\r\n                  <div className=\"sign-label\">\r\n                    <label>비밀번호</label>\r\n                  </div>\r\n                  <div className=\"sign-input\">\r\n                    <input type='password' name=\"signup_password\" placeholder=\"6~20자 영문자를 사용하세요\"/>\r\n                  </div>\r\n                  \r\n                </div>\r\n                <div className=\"sign-info\">\r\n                  <div className=\"sign-label\">\r\n                    <label>비밀번호 확인</label>\r\n                  </div>\r\n                  <div className=\"sign-input\">\r\n                    <input type='password' name=\"signup_pswCheck\" placeholder=\"비밀번호를 한 번 더 입력해주세요\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sign-info\">\r\n                  <div className=\"sign-label\">\r\n                    <label>이름</label>\r\n                  </div>\r\n                  <div className=\"sign-input\">\r\n                    <input type='text' name=\"signup_name\" placeholder=\"이름\"/>\r\n                  </div>\r\n                </div>  \r\n                <div className=\"sign-info\">\r\n                  <div className=\"sign-label\">\r\n                    <label>이메일</label>\r\n                  </div>\r\n                  <div className=\"sign-input\">\r\n                    <input type='text' name=\"signup_email\" placeholder=\"이메일\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sign-submit\">\r\n                  <input type='button' value='가입하기' onClick={() => this._signup()} />\r\n                </div>\r\n                {/* <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>아이디 : </td>\r\n                      <td><input type='text' name=\"signup_id\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>비밀번호 : </td>\r\n                      <td><input type='password' name=\"signup_password\"/></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>비밀번호 확인 : </td>\r\n                      <td><input type='password' name=\"signup_pswCheck\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>이름 : </td>\r\n                      <td><input type='text' name=\"signup_name\"/></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>이메일 : </td>\r\n                      <td><input type='text' name=\"signup_email\"/></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><input type='button' value='가입하기' onClick={() => this._signup()} /></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table> */}\r\n              </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Signup;","export const Mapdata = [\r\n    {\r\n        title: \"스타벅스 동명대DT점\",\r\n        lat: 35.12312878355746,\r\n        lng: 129.09899221248395,\r\n    },\r\n    {\r\n        title: \"이디야커피 부산동명대점\",\r\n        lat: 35.122343980231896,\r\n        lng: 129.10168308252204,\r\n    },\r\n    {\r\n        title: \"카페드림 동명대학교점\",\r\n        lat: 35.12090501135409, \r\n        lng: 129.10120004039004,\r\n    }\r\n];","/*global kakao*/\r\nimport React, { Component } from \"react\";\r\nimport { Mapdata } from \"./Mapdata\";\r\nimport './main.css';\r\n\r\nclass KakaoMap extends Component{\r\n\r\n    componentDidMount(){\r\n        const script = document.createElement('script');\r\n        script.async = true;\r\n        script.src = \r\n            \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=70ccc3f711533e596eca244527ec422d&autoload=false\";\r\n        document.head.appendChild(script);\r\n\r\n        script.onload = () => {\r\n            kakao.maps.load(() => {\r\n                var container = document.getElementById('map');\r\n                var options = {\r\n                    center: new kakao.maps.LatLng(35.122343980231896, 129.10168308252204),\r\n                    level:4\r\n                };\r\n                //this.map = new kakao.maps.Map(container, options);\r\n                 var map = new kakao.maps.Map(container, options);\r\n\r\n                // var geocoder = new kakao.maps.services.Geocoder();\r\n                // geocoder.addressSearch('부산 남구 신선로 423', function(result, status) {\r\n                //     if(status === kakao.maps.services.Status.OK){\r\n                //         var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n                //         var marker = new kakao.maps.Marker({\r\n                //             map: map,\r\n                //             position: coords\r\n                //         });\r\n                //         var infowindow = new kakao.maps.InfoWindow({\r\n                //             content: '<div style=\"width:150px; text-align:center; padding:6px 0;\">스타벅스 동명대DT점</div>'\r\n                //         });\r\n                //         infowindow.open(map, marker);\r\n                //         map.setCenter(coords);\r\n                //     }\r\n                // });\r\n                Mapdata.forEach((el) => {\r\n                    new kakao.maps.Marker({\r\n                        map : map,\r\n                        position : new kakao.maps.LatLng(el.lat, el.lng),\r\n                        title : el.title\r\n                    })\r\n                })\r\n                var markerPosition  = new kakao.maps.LatLng(35.122343980231896, 129.10168308252204); \r\n                var marker = new kakao.maps.Marker({\r\n                        position: markerPosition\r\n                });\r\n                marker.setMap(map);\r\n            });\r\n        };\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"kakao-map\">\r\n                <div id=\"map\" style={{width:\"100%\", height:\"600px\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default KakaoMap;","import './css/list.css';\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { Search } from './index';\r\nimport { Link } from 'react-router-dom';\r\nimport KakaoMap from './kakaomap';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSmile } from '@fortawesome/free-regular-svg-icons';\r\nimport { faAngry} from '@fortawesome/free-regular-svg-icons';\r\nimport { faMeh} from '@fortawesome/free-regular-svg-icons';\r\nimport { faFrown } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : [],\r\n            page : 1,\r\n            limit : 9,\r\n            all_page : [],\r\n            search : \"\",\r\n            file:null,\r\n            fileName: \"\",\r\n\r\n            curHead : 10,\r\n            sit : 50\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this._getListData();\r\n        this._setPage();\r\n        \r\n    }\r\n    _getListData = async function() {\r\n        const { limit } = this.state;\r\n        const page = this._setPage();\r\n        //검색\r\n        let search = queryString.parse(this.props.location.search);\r\n        if(search) {\r\n            search = search.search;\r\n        }\r\n\r\n        //데이터 전체 수\r\n        const total_cnt = await axios('/get/store_cnt',{\r\n\r\n            method : 'POST',\r\n            headers: new Headers(),\r\n            data : { search : search }\r\n        });\r\n\r\n        //데이터 가져오기\r\n        const data_list = await axios('/get/store', {\r\n          method : 'POST',\r\n          headers: new Headers(),\r\n          data : { limit : limit, page : page, search : search }\r\n        })\r\n        //전체 페이지 수 구하기\r\n        let page_arr = [];\r\n\r\n        for(let i = 1; i <= Math.ceil(total_cnt.data.cnt / limit); i++) {\r\n            page_arr.push(i);\r\n        }\r\n    \r\n        this.setState({ data : data_list, all_page : page_arr , search : search, })\r\n        \r\n    }\r\n\r\n    _changePage = function(el) {\r\n        this.setState({ page : el })\r\n        sessionStorage.setItem('page', el);\r\n\r\n        return this._getListData();\r\n    }\r\n\r\n    _setPage = function() {\r\n        if(sessionStorage.page) {\r\n          this.setState({ page : Number(sessionStorage.page) })\r\n          return Number(sessionStorage.page);\r\n        }\r\n        \r\n        this.setState({ page : 1 })\r\n        return 1;\r\n    }\r\n    \r\n    _countHead = function (curHead, sit) {\r\n        \r\n        const exp = (curHead/sit)*100;\r\n\r\n        if(76<=exp && exp<=100){\r\n            return (\r\n                <div>\r\n                    <FontAwesomeIcon icon={faSmile} />\r\n                    <FontAwesomeIcon icon={faMeh} />\r\n                    <FontAwesomeIcon icon={faFrown} />\r\n                    <FontAwesomeIcon icon={faAngry} style={{color: 'red'}}/>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        else if(51<=exp && exp<=75){\r\n            return(\r\n                <div>\r\n                    <FontAwesomeIcon icon={faSmile} />\r\n                    <FontAwesomeIcon icon={faMeh} />\r\n                    <FontAwesomeIcon icon={faFrown} style={{color: 'red'}}/>\r\n                    <FontAwesomeIcon icon={faAngry} />\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        else if(26<=exp && exp<=50){\r\n            return (\r\n                <div>\r\n                    <FontAwesomeIcon icon={faSmile} />\r\n                    <FontAwesomeIcon icon={faMeh} style={{color: 'red'}}/>\r\n                    <FontAwesomeIcon icon={faFrown} />\r\n                    <FontAwesomeIcon icon={faAngry} />\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <FontAwesomeIcon icon={faSmile} style={{color: 'red'}}/>\r\n                    <FontAwesomeIcon icon={faMeh} />\r\n                    <FontAwesomeIcon icon={faFrown} />\r\n                    <FontAwesomeIcon icon={faAngry} />\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        const list = this.state.data.data;\r\n        const { all_page, page, search } = this.state;\r\n       \r\n        return (\r\n            <div className=\"list-area\">\r\n                <div className=\"list-box\">\r\n                    <div className=\"list-search\">\r\n                        <Search search = {search}/>\r\n                    </div>\r\n                    <div className=\"list-map\">\r\n                        <KakaoMap />\r\n                    </div>\r\n                    \r\n                    <div className=\"list-list\">\r\n                        \r\n                        <div className=\"list-ch\">\r\n                        {list && list.length > 0 ?  \r\n                            list.map( (el, key) => {\r\n                                const view_url = '/view/' + el.storeid;\r\n                                return(\r\n                                    <div className=\"list-view\" key={key}>\r\n                                        <div className=\"list-left\" >\r\n                                            <div className=\"list-store\"> <Link className=\"list-Link\" to ={view_url}>{el.storeName} </Link> </div>\r\n                                            <div className=\"list-address\"> {el.address} </div>\r\n                                            <div className=\"list-time\">{el.time}</div>\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"list-right\">\r\n                                            {this._countHead(el.curHead, el.sit)}\r\n                                            <div className=\"list-sit\"> {el.curHead} / {el.sit} </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    )\r\n                                })\r\n                            : \r\n                            <div>\r\n                                {search !== \"\" ? <div>검색된 결과가 없습니다.</div>\r\n                                            : <div>데이터가 없습니다.</div>\r\n                                }\r\n                            </div> \r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                {/* <div>\r\n                    <div className=\"list_search\">\r\n                        <Search search = {search}/>\r\n                    </div>\r\n                <div className=\"main-list\">\r\n                    <div>\r\n                        <KakaoMap />\r\n                    </div>\r\n                    <div className=\"list-box\">\r\n                        {list && list.length > 0 ?  list.map( (el, key) => {\r\n                            const view_url = '/view/' + el.storeid;\r\n                        return(\r\n                            <div className=\"list-view\" key={key}>\r\n                                <div className=\"list-store\"> <Link className=\"list-Link\" to ={view_url}>{el.storeName} </Link> </div>\r\n                                <div className=\"list-address\"> {el.address} </div>\r\n                                <div className=\"list-sit\"> {el.sit} </div>\r\n                            </div>\r\n                            )\r\n                        })\r\n                        : \r\n                        <div>\r\n                            {search !== \"\" ? <div>검색된 결과가 없습니다.</div>\r\n                                        : <div>데이터가 없습니다.</div>\r\n                            }\r\n                            </div> \r\n                        }\r\n                    </div>\r\n                    <div className=\"list-page\">\r\n                        <ul>\r\n                            {all_page ? all_page.map( (el, key) => {\r\n                            return(\r\n                                el === page ? <li key={key} className='page_num'> <b> {el} </b> </li>\r\n                                            : <li key={key} className='page_num' onClick={() => this._changePage(el)}> {el} </li>\r\n                            )\r\n                            })\r\n                            \r\n                            : null}\r\n                        </ul>\r\n                    </div>\r\n                </div> */}\r\n                \r\n            {/* </div> */}\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default List;","import React, { Component } from \"react\";\r\nimport './css/search.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Search extends Component{\r\n    \r\n    render(){\r\n        const { search } = this.props;\r\n        if(search) {\r\n            document.getElementsByName('search')[0].value = search\r\n        }\r\n        return(\r\n            <div className=\"search-sclist\">\r\n                <form className=\"search-form\">\r\n                    {/* <FontAwesomeIcon icon={faSearch} className=\"search-icon\" /> */}\r\n                    <div className=\"search-left\">\r\n                        <input className=\"search-text\" type='text' maxLength='20' name='search' placeholder='검색'></input>\r\n                    </div>\r\n                    <div className=\"search-right\">\r\n                        <button className=\"search-btn\" type='submit'>\r\n                            <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Search;","/*global kakao*/\r\nimport axios from \"axios\";\r\nimport React,{ Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarker } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPhoneAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faEye } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faEdit } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faChair } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './css/view.css';\r\n\r\nclass View extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data : [],\r\n            address : \"\"\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        const storeid = this.props.match.params.data;\r\n        console.log(storeid);\r\n\r\n        const address = this.props.match.params.data;\r\n        console.log(address);\r\n\r\n        this._getAddress();\r\n\r\n        this._getData(storeid);\r\n        this._addViewCnt(storeid);\r\n        \r\n        \r\n        const script = document.createElement('script');\r\n        script.async = true;\r\n        script.src = \r\n            \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=70ccc3f711533e596eca244527ec422d&autoload=false\";\r\n        document.head.appendChild(script);\r\n\r\n        script.onload = () => {\r\n            kakao.maps.load(() => {\r\n                var container = document.getElementById('map');\r\n                var options = {\r\n                    center: new kakao.maps.LatLng(35.122343980231896, 129.10168308252204),\r\n                    level:3\r\n                };\r\n                //this.map = new kakao.maps.Map(container, options);\r\n                //const map = new window.kakao.maps.Map(container, options);\r\n                // var markerPosition  = new kakao.maps.LatLng(35.122343980231896, 129.10168308252204); \r\n                // var marker = new kakao.maps.Marker({\r\n                //     position: markerPosition\r\n                // });\r\n                // marker.setMap(map);\r\n                var map = new kakao.maps.Map(container, options);\r\n\r\n                var geocoder = new kakao.maps.services.Geocoder();\r\n                geocoder.addressSearch('부산 남구 신선로 423', function(result, status) {\r\n                    if(status === kakao.maps.services.Status.OK){\r\n                        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n                        var marker = new kakao.maps.Marker({\r\n                            map: map,\r\n                            position: coords\r\n                        });\r\n                        var infowindow = new kakao.maps.InfoWindow({\r\n                            content: '<div style=\"width:150px; text-align:center; padding:6px 0;\">스타벅스 동명대DT점</div>'\r\n                        });\r\n                        infowindow.open(map, marker);\r\n                        map.setCenter(coords);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n    }\r\n    _getAddress = async function(address) {\r\n\r\n        const getAddress = await axios('/get/store_address', {\r\n            method : 'POST',\r\n            headers : new Headers(),\r\n            data : { address : address }\r\n        });\r\n\r\n        console.log(getAddress);\r\n        console.log(getAddress.data);\r\n        return this.setState({ address : getAddress });\r\n    }\r\n\r\n    _getData = async function(storeid) {\r\n\r\n        const getData = await axios('/get/store_data', {\r\n            method : 'POST',\r\n            headers : new Headers(),\r\n            data : { storeid : storeid }\r\n        });\r\n\r\n        \r\n        console.log(getData.data);\r\n        return this.setState({ data : getData });\r\n    }\r\n    \r\n    _addViewCnt = async function (storeid) {\r\n        await axios('/update/view_cnt', {\r\n            method : 'POST',\r\n            headers : new Headers(),\r\n            data : { storeid : storeid }\r\n        })\r\n\r\n    }\r\n\r\n    _removeView = async function(){\r\n        if(window.confirm('해당 게시물을 삭제하시겠습니까?')){\r\n            const storeid = this.props.match.params.data;\r\n\r\n            await axios('/delete/store', {\r\n                method : 'POST',\r\n                headers : new Headers(),\r\n                data : { storeid : storeid }\r\n            })\r\n\r\n            alert('게시물이 삭제되었습니다.');\r\n            return window.location.href = '/';\r\n        }\r\n    }\r\n    // _toggleLike = async function(){\r\n    //     const { user_id, login, _toggleModal } = this.props;\r\n\r\n    //     if(!login){\r\n    //         alert('로그인이 필요합니다.');\r\n    //         return _toggleModal(true)\r\n    //     }\r\n    //     const storeid = this.props.match.params.data;\r\n\r\n    //     const obj = { type : 'add', user_id : user_id, storeid : storeid}\r\n    //     const res = await axios('/update/like', {\r\n    //         method : 'POST',\r\n    //         headers: new Headers(),\r\n    //         data : obj\r\n    //     })\r\n    // }\r\n    render(){\r\n        const { data } = this.state;\r\n        const { admin } = this.props;\r\n\r\n        if(data.data) {\r\n            var modify_url = '/write/modify/' + data.data[0].storeid;\r\n        }\r\n\r\n        return(\r\n            <div className=\"view\">\r\n                {data.data \r\n                ? <div className=\"view-box\">\r\n                    <div className=\"view-header\">\r\n                        <div className=\"view-name\">\r\n                            <input className=\"view-storename\" type=\"text\" name=\"storeName\" defaultValue={data.data[0].storeName} readOnly/>\r\n                        </div>\r\n                        <div className=\"view-icon\">\r\n                            <div className=\"info\">\r\n                                <div className=\"icon-eye\"><FontAwesomeIcon icon={faEye} /></div>\r\n                                <input className=\"view-viewcnt\" type=\"text\" name=\"view_cnt\" defaultValue={data.data[0].view_cnt + 1} readOnly></input>\r\n                                \r\n                                {/* <div className=\"info\">\r\n                                    <FontAwesomeIcon icon={solidHeart} onClick={()=> this._toggleLike()}/>\r\n                                    <FontAwesomeIcon icon={regularHeart} onClick={()=> this._toggleLike()}/>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"view-info\">\r\n                        <div className=\"info\">\r\n                            <div className=\"icon\"><FontAwesomeIcon icon={faMapMarker} /></div>\r\n                            <input className=\"view-address\" type=\"text\" name=\"address\" defaultValue={data.data[0].address} readOnly/>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <div className=\"icon\">\r\n                                <FontAwesomeIcon icon={faPhoneAlt} />\r\n                            </div>\r\n                            <input className=\"view-number\" type=\"text\" name=\"number\" defaultValue={data.data[0].number} readOnly/>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <div className=\"icon\"><FontAwesomeIcon icon={faClock} /></div>\r\n                            <input className=\"view-time\" type=\"text\" name=\"time\" defaultValue={data.data[0].time} readOnly/>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <div className=\"icon\"><FontAwesomeIcon icon={faChair} /></div>\r\n                            <input className=\"view-sit\" type=\"text\" name=\"sit\" defaultValue={data.data[0].sit} readOnly/>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <div className=\"icon\"><FontAwesomeIcon icon={faEdit} /></div>\r\n                            <input className=\"view-introduce\" type=\"text\" name=\"introduce\" defaultValue={data.data[0].introduce} readOnly/>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                        {/* <\r\n                    <img src={data.data[0].image} width=\"200px\" height=\"200px\" name=\"image\" defaultValue={data.data[0].image}></img>\r\n                        */}\r\n                            {/* <input className=\"view-image\" type=\"text\" name=\"image\" defaultValue={data.data[0].image} readOnly/> */}\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div className=\"view-map\" id=\"map\" style={{width:\"350px\", height:\"270px\"}}></div>\r\n                    <div className=\"view-controll\">\r\n                        {admin === 'Y'\r\n                        ? \r\n                            <div className=\"view-up-de\">\r\n                                <Link to={modify_url}><input type=\"button\" value=\"수정\" /></Link>\r\n                                <input type=\"button\" value=\"삭제\" onClick={() =>this._removeView()}/>\r\n                            </div>\r\n                        : null }\r\n                        \r\n                        {/* <input type=\"button\" value=\"목록\" onClick={() => window.location.href='/'} /> */}\r\n                    </div>\r\n                    \r\n                    \r\n                </div> \r\n                : null }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default View;","import React, { Component } from \"react\";\r\n\r\nclass Image extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            file:null,\r\n            fileName: '',\r\n\r\n        }\r\n        \r\n    }\r\n    // handleFormSubmit = (e) =>{\r\n    //     e.preventDefault()\r\n    //     this.addList()\r\n    //     .then((response) => {\r\n    //         console.log(response.data);\r\n    //         this.props.stateRefresh();\r\n    //     })\r\n    //     this.setState({\r\n    //         file:null,\r\n    //         userID: \"\",\r\n    //         title: \"\",\r\n    //         content: \"\",\r\n    //         fileName: \"\"\r\n    //     })\r\n    // }\r\n    // handleFileChange = (e) => {\r\n    //     this.setState({\r\n    //         file: e.target.files[0],\r\n    //         fileName: e.target.value\r\n    //     })\r\n    // }\r\n    // addList = () => {\r\n    //     const url = '/api/lists';\r\n    //     const formData = new FormData();\r\n    //     formData.append('image', this.state.file);\r\n\r\n        \r\n    //     return post(url, formData);\r\n    // }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form encType=\"multipart/form-data\" method=\"post\" action=\"/upload\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>이미지 : </td>\r\n                                <td><input type=\"file\" name=\"image\" ></input></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><input type=\"submit\" ></input></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Image;","import { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './css/write.css';\r\n\r\nclass Write extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            storeName : \"\",\r\n            address : \"\",\r\n            number : \"\",\r\n            time : \"\",\r\n            sit : \"\",\r\n            introduce : \"\",\r\n            image : \"\",\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _submitStore = async function() {\r\n        const storeName = document.getElementsByName('storeName')[0].value.trim();\r\n        const address = document.getElementsByName('address')[0].value.trim();\r\n        const number = document.getElementsByName('number')[0].value.trim();\r\n        const time = document.getElementsByName('time')[0].value.trim();\r\n        const sit = document.getElementsByName('sit')[0].value.trim();\r\n        const introduce = document.getElementsByName('introduce')[0].value.trim();\r\n        const image = document.getElementsByName('image')[0].value.trim();\r\n\r\n        \r\n        if(!this.props.match.params.data){\r\n\r\n        if(storeName === \"\"){\r\n            return alert(\"가게명을 입력해주세요.\");\r\n        } \r\n        else if(address===\"\"){\r\n            return alert(\"주소를 입력해주세요.\");\r\n        }\r\n        else if(number===\"\"){\r\n            return alert(\"전화번호를 입력해주세요.\");\r\n        }\r\n        else if(time===\"\"){\r\n            return alert(\"영업시간을 입력해주세요.\");\r\n        }\r\n        else if(sit===\"\"){\r\n            return alert(\"총좌석을 입력해주세요.\");\r\n        }\r\n        else if(introduce===\"\"){\r\n            return alert(\"가게 소개를 입력해주세요.\");\r\n        }\r\n        else if(image===\"\"){\r\n            return alert(\"사진을 추가해주세요.\");\r\n        }\r\n            const data = { \r\n                storeName : storeName, \r\n                address : address,\r\n                number : number,\r\n                time : time,\r\n                sit : sit,\r\n                introduce : introduce,\r\n                image :image\r\n            };\r\n            const res = await axios('/add/store', {\r\n                method : 'POST',\r\n                data : data,\r\n                headers : new Headers()\r\n            })\r\n\r\n            if(res.data) {\r\n                alert('글 등록이 완료되었습니다.');\r\n                return window.location.replace('/')\r\n            }\r\n        }else{\r\n            const data = { \r\n                storeName : storeName, \r\n                address : address,\r\n                number : number,\r\n                time : time,\r\n                sit : sit,\r\n                introduce : introduce,\r\n                image :image,\r\n                storeid : this.props.match.params.data\r\n            };\r\n            const res = await axios('/update/store', {\r\n                method : 'POST',\r\n                data : data,\r\n                headers : new Headers()\r\n            })\r\n            if(res.data){\r\n                alert('글 수정이 완료되었습니다.');\r\n\r\n                const url = \"/view/\" + this.props.match.params.data;\r\n\r\n                return window.location.href = url;\r\n            }\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        if(this.props.match.params.data && this.props.storeName.length === 0) {\r\n          this.props._getModifyData(this.props.match.params.data);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { storeName, address, number, time, sit, introduce} = this.props;\r\n        return(\r\n            <div>\r\n                <div className=\"write-box\">\r\n                    <h3>store </h3>  \r\n                    <form className=\"write-form\" encType=\"multipart/form-data\" method=\"post\">\r\n                        <div className=\"write-info\">\r\n                            <div className=\"info-name\">\r\n                                <label>가게명</label>\r\n                            </div> \r\n                            <div className=\"info-input\">\r\n                                <input type=\"text\" name=\"storeName\" placeholder=\"가게명\" defaultValue={storeName}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"write-info\">\r\n                            <div className=\"info-name\">\r\n                                <label>주소</label>\r\n                            </div> \r\n                            <div className=\"info-input\">\r\n                                <input type=\"text\" name=\"address\" placeholder=\"주소\" defaultValue={address}></input>\r\n                            </div>  \r\n                        </div>\r\n                        <div className=\"write-info\">\r\n                            <div className=\"info-name\">\r\n                                <label>번호</label>\r\n                            </div> \r\n                            <div className=\"info-input\">\r\n                                <input type=\"text\" name=\"number\" placeholder=\"번호\" defaultValue={number}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"write-info\">\r\n                            <div className=\"info-name\">\r\n                                <label>영업시간</label>\r\n                            </div> \r\n                            <div className=\"info-input\">\r\n                                <input type=\"text\" name=\"time\" placeholder=\"영업시간\" defaultValue={time}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"write-info\">\r\n                            <div className=\"info-name\">\r\n                                <label>총 좌석</label>\r\n                            </div> \r\n                            <div className=\"info-input\">\r\n                                <input type=\"text\" name=\"sit\" placeholder=\"총 좌석\" defaultValue={sit}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"write-info\">\r\n                            <div className=\"info-name\">\r\n                                <label>가게 소개</label>\r\n                            </div> \r\n                            <div className=\"info-input\">\r\n                                <input type=\"content\" name=\"introduce\" maxLength={300} placeholder=\"가게소개\" defaultValue={introduce}></input>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"write-info\">\r\n                            <div className=\"info-name\">\r\n                                <label>이미지</label>\r\n                            </div> \r\n                            <div className=\"info-input\">\r\n                                <input type=\"file\" name=\"image\" placeholder=\"이미지\" ></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"write-info-submit\">\r\n                            <input type=\"button\" value=\"등록하기\" onClick={() => this._submitStore()}></input>\r\n                        </div>\r\n                        {/* <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>가게명 : </td>\r\n                                    <td><input type=\"text\" name=\"storeName\" placeholder=\"가게명\" defaultValue={storeName}></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>주소 : </td>\r\n                                    <td><input type=\"text\" name=\"address\" placeholder=\"주소\" defaultValue={address}></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>번호 : </td>\r\n                                    <td><input type=\"text\" name=\"number\" placeholder=\"번호\" defaultValue={number}></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>영업시간 : </td>\r\n                                    <td><input type=\"text\" name=\"time\" placeholder=\"영업시간\" defaultValue={time}></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>총 좌석 : </td>\r\n                                    <td><input type=\"text\" name=\"sit\" placeholder=\"총 좌석\" defaultValue={sit}></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>가게 소개 : </td>\r\n                                    <td><input type=\"content\" name=\"introduce\" placeholder=\"가게명\" defaultValue={introduce}></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>사진 추가 :</td>\r\n                                    <td><input type=\"file\" name=\"image\" placeholder=\"이미지\" ></input></td>\r\n                                </tr>\r\n                                \r\n                                <tr>\r\n                                    <td><input type=\"button\" value=\"등록하기\" onClick={() => this._submitStore()}></input></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table> */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Write;","\nimport './App.css';\nimport React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport { Main, Login, Signup, List, View, Image} from './inc';\nimport Write from './inc/write';\nimport axios from 'axios';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      admin : false,\n      user_ip : \"\",\n      login: false,\n      login_model : false,\n      storeName : \"\",\n      address : \"\",\n      number : \"\",\n      time : \"\",\n      sit : \"\",\n      introduce : \"\",\n      image : \"\",\n      user_id: \"\",\n      // list_data : [],\n      // list_page : 1,\n      // list_limit : 9,\n      // list_all_page : [],\n      // list_search : \"\",\n\n    }\n  }\n  componentDidMount(){\n    if(sessionStorage.login && sessionStorage.IP) {\n      this.setState({ \n        login : JSON.parse(sessionStorage.login).id, \n        admin : JSON.parse(sessionStorage.login).admin,\n        user_ip : JSON.parse(sessionStorage.IP),\n        user_id : JSON.parse(sessionStorage.login).user_id,\n      })\n    }\n  }\n  \n\n  _withProps = function (Component, props) {\n    return function(matchProps) {\n      return <Component {...props} {...matchProps} />\n    }\n  }\n\n  _login = (data) => {\n    sessionStorage.setItem('login', JSON.stringify(data.suc))\n    sessionStorage.setItem('IP', JSON.stringify(data.ip))\n\n    this.setState({ login : JSON.parse(sessionStorage.login).id,  \n                    admin : JSON.stringify(data.suc).admin,\n                    user_ip : JSON.parse(sessionStorage.IP),\n                    user_id : JSON.parse(sessionStorage.login).user_id,\n    })\n\n    return window.location.reload()\n  }\n\n  _logout = () => {\n    this.setState({ login : false, admin : false, user_ip : \"\" })\n\n    sessionStorage.removeItem('login')\n    sessionStorage.removeItem('IP')\n  }\n\n  _getstoreName = () => {\n    const storeName = document.getElementsByName('storeName')[0].value.trim();\n\n    this.setState({ storeName : storeName })\n  }\n  //게시글 수정 (원래 글 불러오기)\n  _getModifyData = async (storeid)=>{\n    const getData = await axios('/get/store_data', {\n      method : 'POST',\n      headers : new Headers(),\n      data : { storeid : storeid }\n  });\n    this.setState({\n      storeName : getData.data[0].storeName,\n      address : getData.data[0].address,\n      number : getData.data[0].number,\n      time : getData.data[0].time,\n      sit : getData.data[0].sit,\n      introduce : getData.data[0].introduce,\n      image : getData.data[0].image,\n    })\n    console.log(getData)\n  }\n  _toggleModal = (boolean) => {\n    this.setState({ login_modal : boolean })\n  };\n\n  render(){\n    const { login, admin, user_ip, storeName, address, number, time, sit, introduce, image, login_modal } = this.state;\n    const { _login, _logout, _getModifyData, _getstoreName, _toggleModal, user_id } = this;\n    \n    //console.log(login);\n    return(\n      <div className=\"app_div\">\n        {/* <Login /> */}\n        <Main\n          admin = {admin}\n          user_ip = { user_ip}\n          login = {login}\n          _login = {_login}\n          _logout = {_logout}\n          login_modal = {login_modal}\n          _toggleModal = {_toggleModal} \n          user_id = {user_id}\n          />\n        \n        <Route exact={true} path={\"/login\"}  component={Login}/>\n        <Route exact={true} path={\"/signup\"}  component={Signup}/>\n        <Route exact={true} path={\"/write\"} component={Write}/>\n        <Route exact={true} path={\"/write/modify/:data\"} \n              component={this._withProps(Write,{\n                _getstoreName : _getstoreName,\n                storeName : storeName,\n                address : address,\n                number : number,\n                time : time,\n                sit : sit,\n                introduce : introduce,\n                image : image,\n                _getModifyData : _getModifyData,\n              })} />\n          <Route exact={true} path={\"/\"} component={List}/>\n          <Route exact={true} path={\"/view/:data\"} \n              component={this._withProps(View,{\n                admin : admin,\n                login : login,\n                user_id : user_id,\n                address : address,\n                _toggleModal : _toggleModal\n                \n              })} />\n          <Route exact={true} path={\"/image\"} component={Image} />\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}